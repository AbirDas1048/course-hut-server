[
    {
        "id": "01",
        "name": "Introductory C Programming Specialization",
        "subTitle": "Learn Essential Programming Fundamentals. Master programming skills to solve complex problems.",
        "image": "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d15cw65ipctsrr.cloudfront.net/84/6b4000ad1111e79ca09d02438dcd55/comps-square.jpg?auto=format%2Ccompress&dpr=2&w=330&h=330&fit=fill&q=25",
        "ratings": 4.6,
        "duration": "5 months",
        "instructor": "Andrew D. Hilton",
        "isFeatured": true,
        "description": "This specialization develops strong programming fundamentals for learners who want to solve complex problems by writing computer programs. Through four courses, you will learn to develop algorithms in a systematic way and read and write the C code to implement them. This will prepare you to pursue a career in software development or other computational fields. Successful completion of this Specialization will be considered by admissions as a demonstration of your skill and enhance your master’s application to Duke’s Pratt School of Engineering",
        "outcomes": [
            {
                "title": "Programming Fundamentals",
                "details": "Programming is an increasingly important skill, whether you aspire to a career in software development, or in other fields. This course is the first in the specialization Introduction to Programming in C, but its lessons extend to any language you might want to learn. This is because programming is fundamentally about figuring out how to solve a class of problems and writing the algorithm, a clear set of steps to solve any problem in its class. This course will introduce you to a powerful problem-solving process—the Seven Steps—which you can use to solve any programming problem. In this course, you will learn how to develop an algorithm, then progress to reading code and understanding how programming concepts relate to algorithms."
            },
            {
                "title": "Writing, Running, and Fixing Code in C",
                "details": "Building on the course Programming Fundamentals, this course will teach you how to write code by first planning what your program should do—an important approach for novice and professional programmers. You will learn how to compile and run your program, and then how to test and debug it. This course builds on the Seven Steps you have already learned and provides a framework for systematically testing for problems and fixing them, so you can find and fix problems efficiently."
            },
            {
                "title": "Pointers, Arrays, and Recursion",
                "details": "The third course in the specialization Introduction to Programming in C introduces the programming constructs pointers, arrays, and recursion. Pointers provide control and flexibility when programming in C by giving you a way to refer to the location of other data. Arrays provide a way to bundle data by guaranteeing sequences of data are grouped together. Finally, recursive functions—functions that call themselves—provide an alternative to iteration that are very useful for implementing certain algorithms."
            },
            {
                "title": "Interacting with the System and Managing Memory",
                "details": "The final course in the specialization Introduction to Programming in C will teach you powerful new programming techniques for interacting with the user and the system and dynamically allocating memory. You will learn more sophisticated uses for pointers, such as strings and multidimensional arrays, as well as how to write programs that read and write files and take input from the user. Learning about dynamic memory allocation will allow your programs to perform complex tasks that will be applied in the final part of the specialization project: a Monte Carlo simulation for calculating poker hand probabilities."
            }
        ]
    },
    {
        "id": "02",
        "name": "Coding for Everyone: C and C++ Specialization",
        "subTitle": "Beginner to Programmer — Learn to Code in C & C++. Gain a deep understanding of computer programming by learning to code, debug, and solve complex problems with C and C++.",
        "image": "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d15cw65ipctsrr.cloudfront.net/fe/163a0249a146fdab429b3908e28422/C4E-logo-spec.png?auto=format%2Ccompress&dpr=1&w=330&h=330&fit=fill&q=25",
        "ratings": 4.4,
        "duration": "6 months",
        "instructor": "Ira Pohl",
        "isFeatured": true,
        "description": "This Specialization is intended for all programming enthusiasts, as well as beginners, computer and other scientists, and artificial intelligence enthusiasts seeking to develop their programming skills in the foundational languages of C and C++. Through the four courses — two in C, and two in C++ — you will cover the basics of programming in C and move on to the more advanced C++ semantics and syntax, which will prepare you to apply these skills to a number of higher-level problems using AI algorithms and Monte Carlo evaluation in complex games.",
        "outcomes": [
            {
                "title": "C for Everyone: Programming Fundamentals",
                "details": "This course is for everyone. In the new world we live in, coding is a universally valuable skill, whether you're a scientist, artist, or a humanist. Algorithms are everywhere, and we all have to understand how they work. The C language is particularly well suited as an introduction to coding: It's a tried-and-true language, and it allows you to understand computing processes at a deep level. No prior knowledge of coding is needed for this course. We'll start at the beginning. The time estimated time commitment for this course is five hours a week for five weeks."
            },
            {
                "title": "C for Everyone: Structured Programming",
                "details": "In the new world we live in, coding is a universally valuable skill, whether you're a scientist, artist, or humanist. Algorithms are everywhere, and we all have to understand how they work. The C language is particularly well suited as an introduction to coding: It's a tried-and-true language, and it allows you to understand computing processes at a deep level. You will also get an introduction to more advanced programming in C++ in the final module. This is a continuation of C for Everyone: Fundamentals, which you should take before beginning this course. The time estimated time commitment for this course is five hours a week for five weeks."
            },
            {
                "title": "C++ For C Programmers, Part A",
                "details": "This course is for experienced C programmers who want to program in C++ in simple way. The examples and exercises require a basic understanding of algorithms and object-oriented software."
            },
            {
                "title": "C++ For C Programmers, Part B",
                "details": "This course is for experienced C programmers who want to program in C++ in advance way. The examples and exercises require a basic understanding of algorithms and object-oriented software."
            }
        ]
    },
    {
        "id": "03",
        "name": "Object Oriented Programming in Java Specialization",
        "subTitle": "Grow Your Portfolio as a Software Engineer. Learn about Object Oriented Design in four project-based courses.",
        "image": "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d15cw65ipctsrr.cloudfront.net/f2/9b76f090b311e7ab563db169a953fb/programming-1896158_1280.jpg?auto=format%2Ccompress&dpr=1&w=330&h=330&fit=fill&q=25",
        "ratings": 4.6,
        "duration": "5 months",
        "instructor": "Owen Astrachan",
        "isFeatured": false,
        "description": "This Specialization is for aspiring software developers with some programming experience in at least one other programming language (e.g., Python, C, JavaScript, etc.) who want to be able to solve more complex problems through objected-oriented design with Java. In addition to learning Java, you will gain experience with two Java development environments (BlueJ and Eclipse), learn how to program with graphical user interfaces, and learn how to design programs capable of managing large amounts of data. These software engineering skills are broadly applicable across wide array of industries.",
        "outcomes": [
            {
                "title": "Java Programming: Solving Problems with Software",
                "details": "Learn to code in Java and improve your programming and problem-solving skills. You will learn to design algorithms as well as develop and debug programs. Using custom open-source classes, you will write programs that access and transform images, websites, and other types of data. At the end of the course you will build a program that determines the popularity of different baby names in the US over time by analyzing comma separated value (CSV) files."
            },
            {
                "title": "Java Programming: Arrays, Lists, and Structured Data",
                "details": "Build on the software engineering skills you learned in “Java Programming: Solving Problems with Software” by learning new data structures. Use these data structures to build more complex programs that use Java’s object-oriented features. At the end of the course you will write an encryption program and a program to break your encryption algorithm."
            },
            {
                "title": "Object Oriented Programming in Java",
                "details": "Welcome to our course on Object Oriented Programming in Java using data visualization. People come to this course with many different goals -- and we are really excited to work with all of you! Some of you want to be professional software developers, others want to improve your programming skills to implement that cool personal project that you’ve been thinking about, while others of you might not yet know why you’re here and are trying to figure out what this course is all about."
            },
            {
                "title": "Data Structures and Performance",
                "details": "How do Java programs deal with vast quantities of data? Many of the data structures and algorithms that work with introductory toy examples break when applications process real, large data sets.  Efficiency is critical, but how do we achieve it, and how do we even measure it? This is an intermediate Java course. We recommend this course to learners who have previous experience in software development or a background in computer science, and in particular, we recommend that you have taken the first course in this specialization (which also requires some previous experience with Java).  "
            }
        ]
    },
    {
        "id": "04",
        "name": "Python 3 Programming Specialization",
        "subTitle": "Become a Fluent Python Programmer. Learn the fundamentals and become an independent programmer.",
        "image": "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d15cw65ipctsrr.cloudfront.net/be/0ce870e9cb11e8b2d233b4be6a9cf3/pythonfluency_1x1_4.png?auto=format%2Ccompress&dpr=1&w=330&h=330&fit=fill&q=25",
        "ratings": 4.7,
        "duration": "5 months",
        "instructor": "Paul Resnick",
        "isFeatured": false,
        "description": "This specialization teaches the fundamentals of programming in Python 3. We will begin at the beginning, with variables, conditionals, and loops, and get to some intermediate material like keyword parameters, list comprehensions, lambda expressions, and class inheritance. You will have lots of opportunities to practice. You will also learn ways to reason about program execution, so that it is no longer mysterious and you are able to debug programs when they don’t work. By the end of the specialization, you’ll be writing programs that query Internet APIs for data and extract useful information from them.  And you’ll be able to learn to use new modules and APIs on your own by reading the documentation. That will give you a great launch toward being an independent Python programmer.",
        "outcomes": [
            {
                "title": "Python Basics",
                "details": "This course introduces the basics of Python 3, including conditional execution and iteration as control structures, and strings and lists as data structures. You'll program an on-screen Turtle to draw pretty pictures. You'll also learn to draw reference diagrams as a way to reason about program executions, which will help to build up your debugging skills. The course has no prerequisites. It will cover Chapters 1-9 of the textbook 'Fundamentals of Python Programming,' which is the accompanying text (optional and free) for this course. The course is for you if you're a newcomer to Python programming, if you need a refresher on Python basics, or if you may have had some exposure to Python programming but want a more in-depth exposition and vocabulary for describing and reasoning about programs. This is the first of five courses in the Python 3 Programming Specialization."
            },
            {
                "title": "Python Functions, Files, and Dictionaries",
                "details": "This course introduces the dictionary data structure and user-defined functions. You’ll learn about local and global variables, optional and keyword parameter-passing, named functions and lambda expressions. You’ll also learn about Python’s sorted function and how to control the order in which it sorts by passing in another function as an input. For your final project, you’ll read in simulated social media data from a file, compute sentiment scores, and write out .csv files. It covers chapters 10-16 of the textbook “Fundamentals of Python Programming,” which is the accompanying text (optional and free) for this course. The course is well-suited for you if you have already taken the 'Python Basics' course and want to gain further fundamental knowledge of the Python language. Together, both courses are geared towards newcomers to Python programming, those who need a refresher on Python basics, or those who may have had some exposure to Python programming but want a more in-depth exposition and vocabulary for describing and reasoning about programs. This is a follow-up to the 'Python Basics' course (course 1 of the Python 3 Programming Specialization), and it is the second of five courses in the specialization."
            },
            {
                "title": "Data Collection and Processing with Python",
                "details": "This course teaches you to fetch and process data from services on the Internet. It covers Python list comprehensions and provides opportunities to practice extracting from and processing deeply nested data. You'll also learn how to use the Python requests module to interact with REST APIs and what to look for in documentation of those APIs. For the final project, you will construct a 'tag recommender' for the flickr photo sharing site. The course is well-suited for you if you have already taken the 'Python Basics' and 'Python Functions, Files, and Dictionaries' courses (courses 1 and 2 of the Python 3 Programming Specialization). If you are already familiar with Python fundamentals but want practice at retrieving and processing complex nested data from Internet services, you can also benefit from this course without taking the previous two. This is the third of five courses in the Python 3 Programming Specialization."
            },
            {
                "title": "Python Classes and Inheritance",
                "details": "This course introduces classes, instances, and inheritance. You will learn how to use classes to represent data in concise and natural ways. You'll also learn how to override built-in methods and how to create 'inherited' classes that reuse functionality. You'll also learn about how to design classes. Finally, you will be introduced to the good programming habit of writing automated tests for their own code. The course is best-suited for you if you are already familiar with Python fundamentals, which are covered in the 'Python Basics' and 'Python Functions, Files, and Dictionaries' courses (courses 1 and 2 of the Python 3 Programming Specialization). It is optional to have taken the 'Data Collection and Processing with Python' course (course 3 of the specialization), but knowledge of retrieving and processing complex nested data is helpful. This is the fourth of five courses in the Python 3 Programming Specialization."
            },
            {
                "title": "Python Project: pillow, tesseract, and opencv",
                "details": "This course will walk you through a hands-on project suitable for a portfolio. You will be introduced to third-party APIs and will be shown how to manipulate images using the Python imaging library (pillow), how to apply optical character recognition to images to recognize text (tesseract and py-tesseract), and how to identify faces in images using the popular opencv library. By the end of the course you will have worked with three different libraries available for Python 3 to create a real-world data-analysis project. The course is best-suited for learners who have taken the first four courses of the Python 3 Programming Specialization. Learners who already have Python programming skills but want to practice with a hands-on, real-world data-analysis project can also benefit from this course. This is the fifth and final course in the Python 3 Programming Specialization."
            }
        ]
    },
    {
        "id": "05",
        "name": "JavaScript for Beginners Specialization",
        "subTitle": "Build Your Skills in JavaScript and jQuery. Start a journey to using JavaScript to become a programmer.",
        "image": "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d15cw65ipctsrr.cloudfront.net/0d/e2553478254970977ae6126a54d7af/GettyImages-172778145_600x600.png?auto=format%2Ccompress&dpr=1&w=330&h=330&fit=fill&q=25",
        "ratings": 4.7,
        "duration": "4 months",
        "instructor": "William Mead",
        "isFeatured": true,
        "description": "This Specialization is intended for the learner with no previous programming experience or the career changer transitioning to software development. JavaScript is generally the first programming language you will need to learn and this Specialization will help you practice and build your skills through a gentle progression of modules and courses. ",
        "outcomes": [
            {
                "title": "JavaScript Basics",
                "details": "This course introduces the programming language JavaScript and shows the websites that include the type of interactions students will eventually be able to develop.  Learners will understand the importance of how JavaScript was developed and why such history impacts the way JavaScript is currently written and in future releases. Learners will write their first scripts, have their HTML and CSS skills assessed, create variables and arrays and assign values to them. If student’s skills are lacking, resources and recommendations are provided to improve these skills. There is ample opportunity for students to practice these first, core skills."
            },
            {
                "title": "Animation with JavaScript and jQuery",
                "details": "With the general introduction of JavaScript in the first course, this course will focus on JavaScript libraries, specifically jQuery. The scripts will be geared toward Document Object Model (DOM) manipulation. Learners will describe the top JavaScript libraries and differentiate which would work best to implement and accelerate development of web page animation. Course objectives include being introduced to the end product of the course – a landing page style website using jQuery elements to manipulate HTML documents and enhance user experience.  Diving deeper into the landing page that will be created and break it out into individual jQuery projects.  jQuery events and effects will be covered while exploring more jQuery’s relationship with HTML documents.  Finally, a focus on plugins and continue to breakdown jQuery's ability to manipulate HTML and CSS."
            },
            {
                "title": "Interactivity with JavaScript and jQuery",
                "details": "This course is the third in our JavaScript for Beginners Specialization. The scripts will become more complex and introduce more complex jQuery plugins. You will have several challenges to practice your skills throughout the course. The course objectives include how to identify objects in JavaScript; create new objects and populate them with data; manipulate objects by adding, modifying and deleting data in objects; manipulate the DOM based on the data in objects; identify and articulate how multiple functions work together to create a more complex program; and identify processes for breaking larger programs into smaller, more manageable pieces."
            },
            {
                "title": "Data Manipulation in JavaScript",
                "details": "This course builds on the skills from the previous course and goes further into managing and manipulating data with JavaScript. You will learn methods for validating and handling data provided by users or coming from an external data source. This course includes a challenge in the form of a seat reservation system, as well as a project that pulls data in from an external data source. The course objectives include validation basics in JavaScript and jQuery; jQuery form validation plugin features; arrow functions; asynchronous functions; and the JavaScript event loop."
            }
        ]
    },
    {
        "id": "06",
        "name": "Full-Stack Web Development with React Specialization",
        "subTitle": "Build Complete Web and Hybrid Mobile Solutions. Master front-end web, hybrid mobile app and server-side development in three comprehensive courses.",
        "image": "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d15cw65ipctsrr.cloudfront.net/eb/cab7f07dd411e8991ff71ead974a6c/Slide1.png?auto=format%2Ccompress&dpr=1&w=330&h=330&fit=fill&q=25",
        "ratings": 4.7,
        "duration": "3 months",
        "instructor": "Jogesh K. Muppala",
        "isFeatured": true,
        "description": "Learn front-end and hybrid mobile development, with server-side support, for implementing a multi-platform solution. The first two courses in this Specialization cover front-end frameworks: Bootstrap 4 and React. On the server side, you’ll learn to implement NoSQL databases using MongoDB, work within a Node.js environment and Express framework, and communicate to the client side through a RESTful API. Learners enrolling in this Specialization are expected to have prior working knowledge of HTML, CSS and JavaScript. Ideally learners should complete the courses in the specified sequence",
        "outcomes": [
            {
                "title": "Front-End Web UI Frameworks and Tools: Bootstrap 4",
                "details": "This course will give you an overview of client-side web UI frameworks, in particular Bootstrap 4. You will learn about grids and responsive design, Bootstrap CSS and JavaScript components. You will learn about CSS preprocessors, Less and Sass. You will also learn the basics of Node.js and NPM and task runners like Grunt and Gulp. At the end of this course, you will be able to a)Set up, design and style a web page using Bootstrap 4 and its components, b) Create a responsive web page design, and c) Make use of web tools to setup and manage web sites. This course also includes an honors track that enables you to work on your own project developing a website using Bootstrap 4. Students enrolling in this course should have prior good working knowledge of HTML, CSS and JavaScript."
            },
            {
                "title": "Front-End Web Development with React",
                "details": "This course explores Javascript based front-end application development, and in particular the React library (Currently Ver. 16.3). This course will use JavaScript ES6 for developing React application. You will also get an introduction to the use of Reactstrap for Bootstrap 4-based responsive UI design. You will be introduced to various aspects of React components. You will learn about React router and its use in developing single-page applications. You will also learn about designing controlled forms. You will be introduced to the Flux architecture and Redux. You will explore various aspects of Redux and use it to develop React-Redux powered applications. You will then learn to use Fetch for client-server communication and the use of REST API on the server side. A quick tour through React animation support and testing rounds off the course. You must have preferably completed the previous course in the specialization on Bootstrap 4, or have a working knowledge of Bootstrap 4 to be able to navigate this course. Also a good working knowledge of JavaScript, especially ES 5 is strongly recommended."
            },
            {
                "title": "Server-side Development with NodeJS, Express and MongoDB",
                "details": "This course deals with all things server-side. We base the entire course around the NodeJS platform. We start with a brief overview of the Web protocols: HTTP and HTTPS. We examine NodeJS and NodeJS modules: Express for building web servers. On the database side, we review basic CRUD operations, NoSQL databases, in particular MongoDB and Mongoose for accessing MongoDB from NodeJS. We examine the REST concepts and building a RESTful API. We touch upon authentication and security. Finally we review backend as a service (BaaS) approaches, including mobile BaaS, both open-source and commercial BaaS services."
            }
        ]
    }
]